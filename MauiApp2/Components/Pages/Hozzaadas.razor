@page "/zhform"
@using System.IO
<div class="fade-in">
<h3>ZH Adatfelvétel</h3>

<div>
    <label>Tárgy neve:</label>
    <input @bind="TargyNev" />
</div>

<div>
    <label>Típus:</label> <br />
    <select @bind="Tipus">
        @foreach (var tipus in Tipusok)
        {
            <option value="@tipus">@tipus</option>
        }
    </select>
</div>
<br />
<div>
    <label>Dátum:</label>
    <input type="date" @bind="Idopont" />
</div>

<div>
    <label>Megjegyzés:</label>
    <textarea @bind="Megjegyzes"></textarea>
</div>

<button @onclick="MentésFájlba">Mentés</button>
</div>
@if (!string.IsNullOrEmpty(Uzenet))
{
    <p>@Uzenet</p>
}

@code {
    private string TargyNev = "";
    private string Tipus = "Coospace teszt";
    private DateTime Idopont = DateTime.Now;  // Using DateTime directly
    private string Megjegyzes = "";
    private string Uzenet = "";

    private List<string> Tipusok = new()
    {
        "Coospace teszt",
        "Kis Zh",
        "Nagy Zh",
        "Vizsga"
    };

    private async Task MentésFájlba()
    {
        try
        {
            // A fájlmentési mappa beállítása (Zhk mappa)
            string folderPath = Path.Combine(FileSystem.AppDataDirectory, "Zhk");
            Directory.CreateDirectory(folderPath); // Ha nem létezik, létrehozza

            // Fájl neve: tárgy_neve_YYYYMMDD.txt
            string fileName = $"{TargyNev}_{Idopont:yyyyMMdd}.txt";
            string filePath = Path.Combine(folderPath, fileName);

            // Mentendő tartalom
            string tartalom = $"Tárgy: {TargyNev}\nTípus: {Tipus}\nDátum: {Idopont:yyyy-MM-dd}\nMegjegyzés: {Megjegyzes}";

            // Fájl írása
            await File.WriteAllTextAsync(filePath, tartalom);

            Uzenet = $"Sikeresen mentve: {fileName}";
        }
        catch (Exception ex)
        {
            Uzenet = $"Hiba történt: {ex.Message}";
        }
    }
}
